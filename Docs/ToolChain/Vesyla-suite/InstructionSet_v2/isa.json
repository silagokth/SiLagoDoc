{
  "platform": "SiLago 1",
  "instr_bitwidth": 27,
  "instr_code_bitwidth": 4,
  "instruction_templates": [
    {
      "code": 0,
      "name": "HALT",
      "phase": 1,
      "max_chunk": 1,
      "segment_templates": []
    },
    {
      "code": 1,
      "name": "REFI",
      "phase": 4,
      "max_chunk": 3,
      "segment_templates": [
        {
          "name": "port_no",
          "comment": "Selects one of the RFile port.",
          "bitwidth": 2,
          "verbo_map": [
            { "key": 0, "val": "w0" },
            { "key": 1, "val": "w1" },
            { "key": 2, "val": "r0" },
            { "key": 3, "val": "r1" }
          ]
        },
        {
          "name": "extra",
          "comment": "How many following chunks?",
          "bitwidth": 2
        },
        {
          "name": "init_addr_sd",
          "comment": "Is init_addr static or dymamic?",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "init_addr",
          "comment": "Initial address.",
          "bitwidth": 6
        },
        {
          "name": "l1_iter",
          "comment": "Level-1 iteration - 1.",
          "bitwidth": 6
        },
        {
          "name": "init_delay",
          "comment": "Initial delay.",
          "bitwidth": 6,
          "controllable": true
        },
        {
          "name": "l1_iter_sd",
          "comment": "Is level-1 iteration static or dymamic?",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "init_delay_sd",
          "comment": "Is initial delay static or dynamic?",
          "bitwidth": 1,
          "controllable": true,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "unused_0",
          "comment": "Deprecated.",
          "bitwidth": 2,
          "default_val": 2,
          "controllable": false,
          "observable": false
        },
        {
          "name": "l1_step_sd",
          "comment": "Is level-1 step static or dynamic?",
          "bitwidth": 1,
          "default_val": 0,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "l1_step",
          "comment": "Level-1 step",
          "bitwidth": 6,
          "default_val": 1
        },
        {
          "name": "l1_step_sign",
          "comment": "The sign of level-1 step.",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "+" },
            { "key": 1, "val": "-" }
          ]
        },
        {
          "name": "l1_delay_sd",
          "comment": "Is the level-1 delay static or dynamic?",
          "bitwidth": 1,
          "controllable": true,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "l1_delay",
          "comment": "The level-1 delay, middle delay",
          "bitwidth": 4,
          "controllable": true
        },
        {
          "name": "l2_iter_sd",
          "comment": "Is level-2 iteration static or dymamic?",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "l2_iter",
          "comment": "The level-2 iteration - 1.",
          "bitwidth": 5
        },
        {
          "name": "l2_step",
          "comment": "The level-2 step.",
          "bitwidth": 4,
          "default_val": 1
        },
        {
          "name": "unused_1",
          "comment": "Deprecated.",
          "bitwidth": 4,
          "default_val": 3,
          "controllable": false,
          "observable": false
        },
        {
          "name": "l2_delay_sd",
          "comment": "Is the level-2 delay static or dynamic?",
          "bitwidth": 1,
          "controllable": true,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "l2_delay",
          "comment": "The level-2 delay, repetition delay.",
          "bitwidth": 6,
          "controllable": true
        },
        {
          "name": "unused_2",
          "comment": "Deprecated.",
          "bitwidth": 6,
          "default_val": 0,
          "controllable": false,
          "observable": false
        },
        {
          "name": "l1_delay_ext",
          "comment": "The extened bits near MSB of l1_delay.",
          "controllable": true,
          "bitwidth": 2
        },
        {
          "name": "l2_iter_ext",
          "comment": "The extened bits near MSB of l2_iter.",
          "bitwidth": 1
        },
        {
          "name": "l2_step_ext",
          "comment": "The extened bits near MSB of l2_step.",
          "bitwidth": 2
        },
        {
          "name": "unused_3",
          "comment": "Deprecated.",
          "bitwidth": 3,
          "default_val": 0,
          "controllable": false,
          "observable": false
        },
        {
          "name": "dimarch",
          "comment": "Is reading/writing from/to DiMArch?",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "n" },
            { "key": 1, "val": "y" }
          ]
        },
        {
          "name": "compress",
          "comment": "Is the data compressed?",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "n" },
            { "key": 1, "val": "y" }
          ]
        }
      ]
    },
    {
      "code": 4,
      "name": "DPU",
      "phase": 4,
      "max_chunk": 1,
      "segment_templates": [
        {
          "name": "mode",
          "comment": "The DPU mode.",
          "bitwidth": 5,
          "verbo_map": [
            { "key": 0, "val": "idle" },
            { "key": 1, "val": "add" },
            { "key": 2, "val": "sum_acc" },
            { "key": 3, "val": "add_const" },
            { "key": 4, "val": "subt" },
            { "key": 5, "val": "subt_abs" },
            { "key": 6, "val": "mode_6" },
            { "key": 7, "val": "mult" },
            { "key": 8, "val": "mult_add" },
            { "key": 9, "val": "mult_const" },
            { "key": 10, "val": "mac" },
            { "key": 11, "val": "ld_ir" },
            { "key": 12, "val": "axpy" },
            { "key": 13, "val": "max_min_acc" },
            { "key": 14, "val": "max_min_const" },
            { "key": 15, "val": "mode_15" },
            { "key": 16, "val": "max_min" },
            { "key": 17, "val": "shift_l" },
            { "key": 18, "val": "shift_r" },
            { "key": 19, "val": "sigm" },
            { "key": 20, "val": "tanhyp" },
            { "key": 21, "val": "expon" },
            { "key": 22, "val": "lk_relu" },
            { "key": 23, "val": "relu" },
            { "key": 24, "val": "div" },
            { "key": 25, "val": "acc_softmax" },
            { "key": 26, "val": "div_softmax" },
            { "key": 27, "val": "ld_acc" },
            { "key": 28, "val": "scale_dw" },
            { "key": 29, "val": "scale_up" },
            { "key": 30, "val": "mac_inter" },
            { "key": 31, "val": "mode_31" }
          ]
        },
        {
          "name": "control",
          "comment": "The controll mode: saturation and operator type.",
          "bitwidth": 2,
          "default_val": 2,
          "verbo_map": [
            { "key": 0, "val": "nosat_int" },
            { "key": 1, "val": "nosat_fx" },
            { "key": 2, "val": "sat_int" },
            { "key": 3, "val": "sat_fx" }
          ]
        },
        {
          "name": "unused_0",
          "comment": "Deprecated.",
          "bitwidth": 6,
          "default_val": 2,
          "controllable": false,
          "observable": false
        },
        {
          "name": "acc_clear",
          "comment": "The accumulator clear signal will be triggered if the accumulation reaches this number. It also serves as immediate value for some DPU mode.",
          "bitwidth": 8
        },
        {
          "id": 4,
          "name": "io_change",
          "comment": "The IO mode: negate input and absolute output.",
          "bitwidth": 2,
          "verbo_map": [
            { "key": 0, "val": "no_change" },
            { "key": 1, "val": "negate_in0" },
            { "key": 2, "val": "negate_in1" },
            { "key": 3, "val": "abs_out" }
          ]
        }
      ]
    },
    {
      "code": 5,
      "name": "SWB",
      "phase": 3,
      "max_chunk": 1,
      "segment_templates": [
        {
          "name": "unused0",
          "comment": "Deprecated.",
          "bitwidth": 1,
          "default_val": 1,
          "controllable": false,
          "observable": false
        },
        {
          "name": "src_row",
          "comment": "Source row.",
          "bitwidth": 1
        },
        {
          "name": "src_block",
          "comment": "Source block, RF or DPU.",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "rf" },
            { "key": 1, "val": "dpu" }
          ]
        },
        {
          "name": "src_port",
          "comment": "source port.",
          "bitwidth": 1
        },
        {
          "name": "hb_index",
          "comment": "Index of horizontal bus. This is the column difference of the src and dest cell shifting by 2. For example if the path is from [0,0] to [1,2], the column difference is -2, so the hb_index = -2+2=0.",
          "bitwidth": 3
        },
        {
          "name": "send_to_other_row",
          "comment": "Flag of whether src and dest row are equal.",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "n" },
            { "key": 1, "val": "y" }
          ]
        },
        {
          "name": "v_index",
          "comment": "Index of vertical bus. This is the dest port. If destination is RF, the v_index is the port number, if the dest is DPU, the v_index is port number + 2.",
          "bitwidth": 3
        }
      ]
    },
    {
      "code": 6,
      "name": "JUMP",
      "phase": 1,
      "max_chunk": 1,
      "segment_templates": [
        {
          "name": "pc",
          "comment": "The PC to jump to",
          "bitwidth": 6
        }
      ]
    },
    {
      "code": 7,
      "name": "WAIT",
      "phase": 2,
      "max_chunk": 1,
      "segment_templates": [
        {
          "name": "cycle_sd",
          "comment": "Is the cycle static or dynamic?",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "cycle",
          "comment": "Number of cycles - 1",
          "bitwidth": 15
        }
      ]
    },
    {
      "code": 8,
      "name": "LOOP",
      "phase": 1,
      "max_chunk": 2,
      "segment_templates": [
        {
          "name": "extra",
          "comment": "How many following chunks?",
          "bitwidth": 1
        },
        {
          "name": "loopid",
          "comment": "The id of the loop manager slot.",
          "bitwidth": 2
        },
        {
          "name": "endpc",
          "comment": "The PC where loop ends.",
          "bitwidth": 6
        },
        {
          "name": "start_sd",
          "comment": "Is the start static or dynamic?",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "start",
          "comment": "The start of iterator.",
          "bitwidth": 6
        },
        {
          "name": "iter_sd",
          "comment": "Is the iteration count static or dynamic?",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "iter",
          "comment": "The number of iteration.",
          "bitwidth": 6
        },
        {
          "name": "step_sd",
          "comment": "Is the step static or dynamic?",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "step",
          "comment": "The iteration step.",
          "bitwidth": 6,
          "default_val": 1
        },
        {
          "name": "link",
          "comment": "The loops that have the same endpc will be linked together. This field is 1-hot encoded.",
          "bitwidth": 4,
          "controllable": false
        }
      ]
    },
    {
      "code": 9,
      "name": "BW",
      "phase": 1,
      "max_chunk": 1,
      "segment_templates": [
        {
          "name": "config",
          "comment": "Bitwidth configuration for DPU: 4-bit, 8-bit, 16-bit",
          "bitwidth": 2
        }
      ]
    },
    {
      "code": 10,
      "name": "RACCU",
      "phase": 2,
      "max_chunk": 1,
      "segment_templates": [
        {
          "name": "mode",
          "comment": "RACCU mode",
          "bitwidth": 3,
          "verbo_map": [
            { "key": 0, "val": "idle" },
            { "key": 1, "val": "add" },
            { "key": 2, "val": "sub" },
            { "key": 3, "val": "shift_r" },
            { "key": 4, "val": "shift_l" },
            { "key": 5, "val": "mult" },
            { "key": 6, "val": "mult_add" },
            { "key": 7, "val": "mult_sub" }
          ]
        },
        {
          "name": "operand1_sd",
          "comment": "Is the first operand static or dynamic?",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "operand1",
          "comment": "First operand.",
          "bitwidth": 7
        },
        {
          "name": "operand2_sd",
          "comment": "Is the second operand static or dynamic?",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "operand2",
          "comment": "Second operand.",
          "bitwidth": 7
        },
        {
          "name": "result",
          "comment": "The RACCU register to store the result.",
          "bitwidth": 4
        }
      ]
    },
    {
      "code": 11,
      "name": "BRANCH",
      "phase": 1,
      "max_chunk": 1,
      "segment_templates": [
        {
          "name": "mode",
          "comment": "The branch mode",
          "bitwidth": 2
        },
        {
          "name": "false_pc",
          "comment": "The PC to jump to in case the condition is false.",
          "bitwidth": 6
        }
      ]
    },
    {
      "code": 12,
      "name": "ROUTE",
      "phase": 4,
      "max_chunk": 1,
      "segment_templates": [
        {
          "name": "horizontal_dir",
          "comment": "The horizontal direction: West or East.",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "w" },
            { "key": 1, "val": "e" }
          ]
        },
        {
          "name": "horizontal_hops",
          "comment": "The horizontal hops.",
          "bitwidth": 3
        },
        {
          "name": "vertical_dir",
          "comment": "The vertical direction: South or North.",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "n" }
          ]
        },
        {
          "name": "vertical_hops",
          "comment": "The vertical hops.",
          "bitwidth": 3
        },
        {
          "name": "direction",
          "comment": "The data transfer direction: Read or Write.",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "r" },
            { "key": 1, "val": "w" }
          ]
        },
        {
          "name": "select_drra_row",
          "comment": "The drra row that send/recieve the data.",
          "bitwidth": 1
        }
      ]
    },
    {
      "code": 13,
      "name": "SRAM",
      "phase": 5,
      "max_chunk": 3,
      "segment_templates": [
        {
          "name": "rw",
          "comment": "Read or Write",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "r" },
            { "key": 1, "val": "w" }
          ]
        },
        {
          "name": "init_addr",
          "comment": "Initial address",
          "bitwidth": 7
        },
        {
          "name": "init_delay",
          "comment": "initial delay",
          "bitwidth": 4,
          "controllable": true
        },
        {
          "name": "l1_iter",
          "comment": "level-1 iteration - 1.",
          "bitwidth": 7
        },
        {
          "name": "l1_step",
          "comment": "level-1 step",
          "bitwidth": 8,
          "default_val": 1
        },
        {
          "name": "l1_delay",
          "comment": "level-1 delay",
          "bitwidth": 6,
          "controllable": true
        },
        {
          "name": "l2_iter",
          "comment": "level-2 iteration - 1.",
          "bitwidth": 7
        },
        {
          "name": "l2_step",
          "comment": "level-2 step",
          "bitwidth": 8,
          "default_val": 1
        },
        {
          "name": "l2_delay",
          "comment": "level-2 delay",
          "bitwidth": 6,
          "controllable": true
        },
        {
          "name": "init_addr_sd",
          "comment": "Is initial address static or dynamic?",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "l1_iter_sd",
          "comment": "Is level-1 iteration static or dynamic?",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "l2_iter_sd",
          "comment": "Is level-2 iteration static or dynamic?",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "init_delay_sd",
          "comment": "Is initial delay static or dynamic?",
          "bitwidth": 1,
          "controllable": true,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "l1_delay_sd",
          "comment": "Is level-1 delay static or dynamic?",
          "bitwidth": 1,
          "controllable": true,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "l2_delay_sd",
          "comment": "Is level-2 delay static or dynamic?",
          "bitwidth": 1,
          "controllable": true,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "l1_step_sd",
          "comment": "Is level-1 step static or dynamic?",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "l2_step_sd",
          "comment": "Is level-2 step static or dynamic?",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "hops",
          "comment": "Number of hops to reach the DiMArch cell - 1",
          "bitwidth": 4
        }
      ]
    }
  ]
}
